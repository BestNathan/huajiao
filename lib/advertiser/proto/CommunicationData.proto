syntax="proto2";

message Pair {
    required bytes key = 1;
    optional bytes value = 2;
}

message Error {
    required uint32 id = 1;
    optional bytes description = 2;
}

message User {
    required string userid = 1;
    repeated Pair property_pairs = 2;
}

message Info {
    repeated Pair property_pairs = 1;
}

message LoginReq {
    required string mobile_type = 1;
    required uint32 net_type = 2;
    required string server_ram = 3;
    optional bytes secret_ram = 4;
    optional uint32 app_id = 5[default = 2000];
    optional uint32 heart_feq = 6[default = 300];
    optional string deviceid = 7[default = ''];
    optional string platform = 8;
    optional string verf_code = 9;
    optional bool not_encrypt = 10;
}

message LoginResp {
    required uint32 timestamp = 1;
    required string session_id = 2;
    required string session_key = 3;
    optional string client_login_ip = 4;
    optional string serverip = 5;
}

message ChatReq {
    required bytes body = 1;
    optional uint32 body_id = 2;
    optional uint32 more_flag = 3;
    required uint32 body_type = 4;
    optional bool store = 5;
    optional bytes m_parameter = 6;
    optional uint32 service_id = 7;
    optional bytes s_parameter = 8;
    optional uint32 expire_time = 12;
}

message ChatResp {
    required uint32 result = 1;
    optional uint32 body_id = 2;
}

message GetInfoReq {
    required string info_type = 1;
    required int64 get_info_id = 2;
    optional int32 get_info_offset = 3;
    optional bytes s_parameter = 4;
}

message GetInfoResp {
    required string info_type = 1;
    repeated Info infos = 2;
    optional int64 last_info_id = 3;
    optional bytes s_parameter = 4;
}

message GetMultiInfosReq {
    required string info_type = 1;
    repeated int64 get_info_ids = 2;
    optional bytes s_parameter = 3;
}

message GetMultiInfosResp {
    required string info_type = 1;
    repeated Info infos = 2;
    optional int64 last_info_id = 3;
    optional bytes s_parameter = 4;
}

message LogoutReq {
    optional string reason = 1;
}

message LogoutResp {
    required uint32 result = 1;
}

message InitLoginReq {
    required string client_ram = 1;
    optional string sig = 2;
}

message InitLoginResp {
    required string client_ram = 1;
    required string server_ram = 2;
}

message Service_Req {
    required uint32 service_id = 1;
    required bytes request = 2;
}

message Service_Resp {
    required uint32 service_id = 1;
    required bytes response = 2;
}

message ReqEQ1User {
    required string userid = 1;
    required string user_type = 2;
    optional uint32 app_id = 3;
}

message RespEQ1User {
    required string userid = 1;
    required string user_type = 2;
    required int32 status = 3;
    optional string jid = 4;
    optional uint32 app_id = 5;
    optional string platform = 6;
    optional string mobile_type = 7;
    optional uint32 client_ver = 8;
}

message Ex1QueryUserStatusReq {
    repeated ReqEQ1User user_list = 1;
}

message Ex1QueryUserStatusResp {
    repeated RespEQ1User user_list = 1;
}

message Request {
    optional LoginReq login = 2;
    optional ChatReq chat = 3;
    optional GetInfoReq get_info = 5;
    optional LogoutReq logout = 6;
    optional InitLoginReq init_login_req = 9;
    optional Service_Req service_req = 11;
    optional Ex1QueryUserStatusReq e1_query_user = 12;
    optional GetMultiInfosReq get_multi_infos = 100;
}

message Response {
    optional Error error = 1;
    optional LoginResp login = 3;
    optional ChatResp chat = 4;
    optional GetInfoResp get_info = 6;
    optional LogoutResp logout = 7;
    optional InitLoginResp init_login_resp = 10;
    optional Service_Resp service_resp = 12;
    optional Ex1QueryUserStatusResp e1_query_user = 13;
    optional GetMultiInfosResp get_multi_infos = 100;
}

message NewMessageNotify {
    required string info_type = 1;
    optional bytes info_content = 2;
    optional int64 info_id = 3;
    optional uint32 query_after_seconds = 4;
}

message ReLoginNotify {
    optional string new_ip = 1;
}

message ReConnectNotify {
    optional string ip = 1;
    optional uint32 port = 2;
    repeated string more_ips = 3;
}

message Notify {
    optional NewMessageNotify newinfo_ntf = 1;
    optional ReLoginNotify relogin_ntf = 2;
    optional ReConnectNotify reconnect_ntf = 3;
}

message Ack {
    required uint32 result = 1;
}

message RouteInfo {
    required bytes username = 1;
    required string msg_exchanger = 2;
    required string msg_router = 3;
}

message Proxy {
    required string sender = 1;
    repeated RouteInfo receiver = 2;
}

message Message {
    required uint32 msgid = 1;
    required uint64 sn = 2;
    optional string sender = 3;
    optional string receiver = 4;
    optional string receiver_type = 5;
    optional Request req = 6;
    optional Response resp = 7;
    optional Notify notify = 8;
    optional Ack ack = 9;
    optional Proxy proxy_mesg = 10;
    optional uint64 client_data = 11;
    optional string sender_type = 12;
    optional string sender_jid = 13;
}